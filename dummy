Java coding exercise for Sapient

Instructions

• Duration of this exercise is 90 minutes. Please manage your time accordingly. There isn’t

any stipulated duration; only a guidance. However, sooner you complete the exercise, more

marks you will get. Please work accordingly

• Make any necessary assumption, and clearly state the assumptions made.

• Do not seek any help – online or through any other source.

Expectations

• Write the compiling code using your choice of IDE.

• Wherever necessary, provide Unit Test Cases using JUNIT (if you’re not conversant with

JUNIT, just list down unit test cases)

Problem Statement

Write a high performance file search program. The program is supposed to list down all the files,

folders that match the name pattern provided starting from the topmost folder and searching

recursively in subfolders. Program can be a command line main class with following inputs:

• The top folder to start search. Example: C:\MyFolders

• Type of item to search. File or Folder or Both.

• Search pattern - Java regular expressions (java.util.regex) are accepted as the pattern.

• Timeout (in secs) by which application must return. Otherwise it must return with “Could not



Evaluation criteria

• Code Completeness/ Correctness

• Code Structure and quality: Modularity, usage of OO principles, size of classes/functions, class/

• Choice of data structures

• Unit Test cases

• Coding productivity (more time you take to submit the exercise, lesser you will score)

Better you perform on this criteria, higher you will score.

Example: *MFile*.tx? will find UMFile123.txt and AllMFile.txs

complete operation” message

function/variable names, package/class structure


------------------------------------------------------------------------------------------------------------------------


There is three file contains flight data. File data has in csv format.
1)Write a standalone program to search flight detail from all files depend on criteria
2)Criteria would be departure location,arrival location, flight date.
3)Program should follow\Oops principle. And right unit test case also.
4)Result should be in Ascending or descending order.
5)Data separated with pipe | .


File A has data like below:


FLIGHT_NUM|DEP_LOC|ARR_LOC|VALID_TILL|FLIGHT_TIME|FLIGHT_DURN|FARE
AF299|FRA|LHR|20-11-2010|0600|4.10|480
AF118|DUB|MUC|21-12-2010|1410|5.40|580
AF371|AMS|MAD|30-11-2010|1210|3.45|320

File B has data like below:


FLIGHT_NUM|DEP_LOC|ARR_LOC_VALID_TILL|FLIGHT_TIME|FLIGHT_DURN|FARE
BA123|DEL|AMS|12-10-2010|0050|8.00|950
BA412|BOS|CDG|31-12-2010|0210|7.50|800
BA413|BOS|AMS|30-11-2010|1530|7.00|750

File C has data like below:


FLIGHT_NUM|DEP_LOC|ARR_LOC_VALID_TILL|FLIGHT_TIME|FLIGHT_DURN|FARE
LH348|DEL|AMS|30-11-2010|2325|11.00|1050
LH201|LHR|MEL|21-11-2010|0230|15.30|1400
LH342|VIE|JFK|20-10-2010|1130|14.20|980



----------------------------------------------------------------------------------------------------------------------------


1) in a trian compartment there are 67 seats...13 rows of 5 (3 by2) setats and the last row has 2 sets. a person cannot book more than 5 seats. if
a person is bokin then it should be such that maximum people of the group get to sit in the same row. 


http://www.geeksforgeeks.org/find-number-of-islands/
http://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/
